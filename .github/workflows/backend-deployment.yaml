name: Deploy to GCP

on:
  push:
    branches:
      - main

    paths:
      - "server/**"
  workflow_dispatch:

jobs:
  testing:
    uses: ./.github/workflows/python-linting-testing.yaml
  deployment:
    runs-on: ubuntu-latest
    needs: [testing]

    # Set default working directory
    defaults:
      run:
        working-directory: ./server

    env:
      PROJECT_ID: flights-co2-tracker-389215
      GKE_CLUSTER: cost-optimized-cluster-1
      GKE_ZONE: europe-west1-b

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Google cloud authentication for artifact registry
      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      # Configuration of the Google Cloud SDK for artifact registry
      - name: "Set up Cloud SDK for artifact registry"
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          project_id: "${{ env.PROJECT_ID }}"

      # Build Docker Images and push to Google Container Registry
      - name: "Build and Push Docker Images"
        run: |
          docker build . -t main:latest -f dockerfiles/Dockerfile.main
          docker tag main:latest europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-images/main:latest
          docker push europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-images/main:latest
          docker build . -t api:latest -f dockerfiles/Dockerfile.api
          docker tag api:latest europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-images/api:latest
          docker push europe-west1-docker.pkg.dev/${{ env.PROJECT_ID }}/docker-images/api:latest

      # Get the GKE credentials
      - uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Deploy to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f kubernetes-manifests/
          kubectl rollout restart deployments/api
          kubectl rollout restart deployments/main
